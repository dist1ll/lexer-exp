ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
}ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
}ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln foo fn() { 2 + 3 }
ln Data struct { }
class Hash {}
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
	if foo[11] {
		
	}
	while foo[23] {
		let x = 2 + 3;
		for i in x.range() {
			foo();
		}
	}
} 
ln doodle fn() { 2 + 3 }
ln Data struct { }
ln xyz(a: abc): u32 {
	let x = match {
		Abc => FYI,
		Efg(XYZ) => (),
	};
} 
 
